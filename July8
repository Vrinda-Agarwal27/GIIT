JS comes with a JIT compiler

every language has its own API
Native APIs - set of functions and properties
JQuery- embedded or extension API uses Native API of JS
$:{
}

An example of object is the window object.Each webpage has its own window object, isolated from the other

Go to any websit->right-click->inspect->console

#PRIMITIVE DATA
->Strings in single or double quotes
  eg:"hello",'hello'
->Escape Sequences
  eg:\"
  usage:"hello \"there\" guys"
        "hello 'there' guys"
        'hello "there" guys'
->Integer
  eg:100
->Floating Point
  eg:100.256
->Boolean
  eg:true,false
->null :no value assigned
->undefined :equivaent to null
->NaN :not a number

#VARIABLES
'var' keyword
eg: var name="Lawrence";
    var name;//undefined variable
//loosely typed language
  var name;
  undefined

  name="string";
  'string'

  name=100;
  100

  name=false
  false

  name={};
  {}[[Prototype]]: Object

  name=[];
  []length: 0[[Prototype]]: Array(0)

#CONSTANT
remains constant throughout the program
'const' keyword
  eg:const name;
      VM335:1 Uncaught SyntaxError: Missing initializer in const declaration
  eg:const name="hi";
      undefined
      name
      'hi'
      name='hey';
      VM413:1 Uncaught TypeError: Assignment to constant variable.
          at <anonymous>:1:5

#SYMBOLS TABLE
stores all symbols and names .stores information about the scope and binding information about names, information about instances of various entities such as variable and function names, classes, objects.

#WINDOWS OBJECT
All global JavaScript objects, functions, and variables automatically become members of the window object. Global variables are properties of the window object. Global functions are methods of the window object.

#OPERATORS
function defined in the JIT compiler, executed as per their occurrence in the precedence list
eg:Math.pow(2,3);
    8

    Math.pow(NaN, 0)
    1
var num=2;
undefined
num**=4;
16

//'+' used for concatenation
"Good"+"Morning";
'GoodMorning'

//polymorphism of '+',converts whatever needs to be added to a string to a string as well 
"good"+10
'good10'

"good"+true;
'goodtrue'

