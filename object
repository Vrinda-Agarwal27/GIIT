PROPERTIES COMMON FOR DATA PROPERTIES AND ACCESSOR PROPERTIES
#ENUMERABLE PROPERTY
properties.html
output->true
properties.html:20 true
properties.html:21 false
properties.html:22 John

#CONFIGURABLE PROPERTY
properties.html
decides whether a particular property can be modified or not
true
properties.html:21 true
properties.html:22 false
properties.html:23 John
properties.html:32 true
properties.html:33 John
properties.html:36 Uncaught TypeError: Cannot redefine property: name
    at Function.defineProperty (<anonymous>)
    at properties.html:36:16

#PROPERTIES EXCLUSIVE TO THE DATA PROPERTIES
DataProp.html-> 'writable' and 'value'

#PROPERTIES EXCLUSIVE TO THE ACCESSOR PROPERTIES
accessorProp.html->'get' and 'set'

#ADDING MULTIPLE PROPERTIES TO OBJECT 
MultipleProp.html

#RETRIEVING PROPERTIES
getProperty.html
true
getProperty.html:15 true
getProperty.html:16 true
getProperty.html:17 John

PROPERTIES OF AN OBJECT
#EXTENSIBILITY
Decides whether new properties can be added to an object
->Non-extensible
ObjProp.html
var product={
            name:"Iphone"
        };
        console.log(Object.isExtensible(product));
        Object.preventExtensions(product);
        console.log(Object.isExtensible(product));
        product.price=700;
        console.log("price" in product);
output:true
ObjProp.html:15 false
ObjProp.html:17 false

->Seal(non-exentensible+non-configurable)
var product={
            name:"Iphone"
        };
        console.log(Object.isExtensible(product));//true
        console.log(Object.isSealed(product));//false

        Object.seal(product);

        console.log(Object.isExtensible(product));//false
        console.log(Object.isSealed(product));//true
        
        product.price=10;
        console.log("price" in product);//false
        delete product.name;
        console.log("name" in product);//true

        var descriptor=Object.getOwnPropertyDescriptor(product,"name");
        console.log(descriptor.configurable);//false
->Freeze(seal+non-writable)
var product={
            name:"Iphone"
        };
        console.log(Object.isExtensible(product));//true
        console.log(Object.isSealed(product));//false
        console.log(Object.isFrozen(product));//false

        Object.freeze(product);

        console.log(Object.isExtensible(product));//false
        console.log(Object.isSealed(product));//true
        console.log(Object.isFrozen(product));//true

        product.price=10;
        console.log("price" in product);//false
        delete product.name;
        console.log("name" in product);//true

        product.name="Mac book pro";
        console.log(product.name);//Iphone
        var descriptor=Object.getOwnPropertyDescriptor(product,"name");
        console.log(descriptor.configurable);//false
        console.log(descriptor.writable);//false

#SUMMARY
Properties can be added or removed from an object dynamically
In operator
Iterating properties of obj by enumerating through them
Can retrieve only property name as well
Attributes of data property or accessor property of object
Defining multiple properties in one shot
Prevent object modification
->extension,seal,freeze(read only obj)
