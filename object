PROPERTIES COMMON FOR DATA PROPERTIES AND ACCESSOR PROPERTIES
#ENUMERABLE PROPERTY
properties.html
output->true
properties.html:20 true
properties.html:21 false
properties.html:22 John

#CONFIGURABLE PROPERTY
properties.html
decides whether a particular property can be modified or not
true
properties.html:21 true
properties.html:22 false
properties.html:23 John
properties.html:32 true
properties.html:33 John
properties.html:36 Uncaught TypeError: Cannot redefine property: name
    at Function.defineProperty (<anonymous>)
    at properties.html:36:16

#PROPERTIES EXCLUSIVE TO THE DATA PROPERTIES
DataProp.html-> 'writable' and 'value'

#PROPERTIES EXCLUSIVE TO THE ACCESSOR PROPERTIES
accessorProp.html->'get' and 'set'

#ADDING MULTIPLE PROPERTIES TO OBJECT 
MultipleProp.html

#RETRIEVING PROPERTIES
getProperty.html
true
getProperty.html:15 true
getProperty.html:16 true
getProperty.html:17 John

PROPERTIES OF AN OBJECT
#EXTENSIBILITY
Decides whether new properties can be added to an object
->Non-extensible
ObjProp.html
var product={
            name:"Iphone"
        };
        console.log(Object.isExtensible(product));
        Object.preventExtensions(product);
        console.log(Object.isExtensible(product));
        product.price=700;
        console.log("price" in product);
output:true
ObjProp.html:15 false
ObjProp.html:17 false

->Seal(non-exentensible+non-configurable)
var product={
            name:"Iphone"
        };
        console.log(Object.isExtensible(product));//true
        console.log(Object.isSealed(product));//false

        Object.seal(product);

        console.log(Object.isExtensible(product));//false
        console.log(Object.isSealed(product));//true
        
        product.price=10;
        console.log("price" in product);//false
        delete product.name;
        console.log("name" in product);//true

        var descriptor=Object.getOwnPropertyDescriptor(product,"name");
        console.log(descriptor.configurable);//false
->Freeze
